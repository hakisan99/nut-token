/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NutToken, NutTokenInterface } from "../NutToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bbd38038062001bbd833981810160405281019062000037919062000439565b6040518060400160405280600981526020017f4e757420546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e555400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000372565b508060049080519060200190620000d492919062000372565b5050506200010760405180606001604052806031815260200162001b8c60319139826200012060201b620007471760201c565b620001193382620001c660201b60201c565b50620006f2565b620001c2828260405160240162000139929190620004de565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200033f60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002309062000512565b60405180910390fd5b6200024d600083836200036860201b60201c565b80600260008282546200026191906200056d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002b891906200056d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200031f919062000534565b60405180910390a36200033b600083836200036d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b505050565b505050565b82805462000380906200060a565b90600052602060002090601f016020900481019282620003a45760008555620003f0565b82601f10620003bf57805160ff1916838001178555620003f0565b82800160010185558215620003f0579182015b82811115620003ef578251825591602001919060010190620003d2565b5b509050620003ff919062000403565b5090565b5b808211156200041e57600081600090555060010162000404565b5090565b6000815190506200043381620006d8565b92915050565b6000602082840312156200044c57600080fd5b60006200045c8482850162000422565b91505092915050565b6000620004728262000551565b6200047e81856200055c565b935062000490818560208601620005d4565b6200049b816200069e565b840191505092915050565b6000620004b5601f836200055c565b9150620004c282620006af565b602082019050919050565b620004d881620005ca565b82525050565b60006040820190508181036000830152620004fa818562000465565b90506200050b6020830184620004cd565b9392505050565b600060208201905081810360008301526200052d81620004a6565b9050919050565b60006020820190506200054b6000830184620004cd565b92915050565b600081519050919050565b600082825260208201905092915050565b60006200057a82620005ca565b91506200058783620005ca565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005bf57620005be62000640565b5b828201905092915050565b6000819050919050565b60005b83811015620005f4578082015181840152602081019050620005d7565b8381111562000604576000848401525b50505050565b600060028204905060018216806200062357607f821691505b602082108114156200063a57620006396200066f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620006e381620005ca565b8114620006ef57600080fd5b50565b61148a80620007026000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610efa565b60405180910390f35b6100e660048036038101906100e19190610d48565b610308565b6040516100f39190610edf565b60405180910390f35b610104610326565b604051610111919061102c565b60405180910390f35b610134600480360381019061012f9190610cf9565b610330565b6040516101419190610edf565b60405180910390f35b610152610428565b60405161015f9190611047565b60405180910390f35b610182600480360381019061017d9190610d48565b610431565b60405161018f9190610edf565b60405180910390f35b6101b260048036038101906101ad9190610c94565b6104dd565b6040516101bf919061102c565b60405180910390f35b6101d0610525565b6040516101dd9190610efa565b60405180910390f35b61020060048036038101906101fb9190610d48565b6105b7565b60405161020d9190610edf565b60405180910390f35b610230600480360381019061022b9190610d48565b6106a2565b60405161023d9190610edf565b60405180910390f35b610260600480360381019061025b9190610cbd565b6106c0565b60405161026d919061102c565b60405180910390f35b6060600380546102859061115c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061115c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c6103156107e3565b84846107eb565b6001905092915050565b6000600254905090565b600061033d8484846109b6565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103886107e3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610fac565b60405180910390fd5b61041c856104146107e3565b8584036107eb565b60019150509392505050565b60006012905090565b60006104d361043e6107e3565b84846001600061044c6107e3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce919061107e565b6107eb565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105349061115c565b80601f01602080910402602001604051908101604052809291908181526020018280546105609061115c565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c66107e3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061100c565b60405180910390fd5b61069761068e6107e3565b858584036107eb565b600191505092915050565b60006106b66106af6107e3565b84846109b6565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107df828260405160240161075d929190610f1c565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c37565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290610fec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c290610f6c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109a9919061102c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90610fcc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8d90610f4c565b60405180910390fd5b610aa1838383610c60565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90610f8c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bba919061107e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c1e919061102c565b60405180910390a3610c31848484610c65565b50505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b505050565b505050565b600081359050610c7981611426565b92915050565b600081359050610c8e8161143d565b92915050565b600060208284031215610ca657600080fd5b6000610cb484828501610c6a565b91505092915050565b60008060408385031215610cd057600080fd5b6000610cde85828601610c6a565b9250506020610cef85828601610c6a565b9150509250929050565b600080600060608486031215610d0e57600080fd5b6000610d1c86828701610c6a565b9350506020610d2d86828701610c6a565b9250506040610d3e86828701610c7f565b9150509250925092565b60008060408385031215610d5b57600080fd5b6000610d6985828601610c6a565b9250506020610d7a85828601610c7f565b9150509250929050565b610d8d816110e6565b82525050565b6000610d9e82611062565b610da8818561106d565b9350610db8818560208601611129565b610dc1816111ec565b840191505092915050565b6000610dd960238361106d565b9150610de4826111fd565b604082019050919050565b6000610dfc60228361106d565b9150610e078261124c565b604082019050919050565b6000610e1f60268361106d565b9150610e2a8261129b565b604082019050919050565b6000610e4260288361106d565b9150610e4d826112ea565b604082019050919050565b6000610e6560258361106d565b9150610e7082611339565b604082019050919050565b6000610e8860248361106d565b9150610e9382611388565b604082019050919050565b6000610eab60258361106d565b9150610eb6826113d7565b604082019050919050565b610eca81611112565b82525050565b610ed98161111c565b82525050565b6000602082019050610ef46000830184610d84565b92915050565b60006020820190508181036000830152610f148184610d93565b905092915050565b60006040820190508181036000830152610f368185610d93565b9050610f456020830184610ec1565b9392505050565b60006020820190508181036000830152610f6581610dcc565b9050919050565b60006020820190508181036000830152610f8581610def565b9050919050565b60006020820190508181036000830152610fa581610e12565b9050919050565b60006020820190508181036000830152610fc581610e35565b9050919050565b60006020820190508181036000830152610fe581610e58565b9050919050565b6000602082019050818103600083015261100581610e7b565b9050919050565b6000602082019050818103600083015261102581610e9e565b9050919050565b60006020820190506110416000830184610ec1565b92915050565b600060208201905061105c6000830184610ed0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061108982611112565b915061109483611112565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110c9576110c861118e565b5b828201905092915050565b60006110df826110f2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561114757808201518184015260208101905061112c565b83811115611156576000848401525b50505050565b6000600282049050600182168061117457607f821691505b60208210811415611188576111876111bd565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61142f816110d4565b811461143a57600080fd5b50565b61144681611112565b811461145157600080fd5b5056fea2646970667358221220765b4e81128f863b61dbdcc0c7fda911d3e35d06ef4320e734987b299c97fbf464736f6c634300080400334465706c6f79696e67204e757420546f6b656e20636f6e7472616374207769746820696e697469616c20737570706c793a";

type NutTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NutTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NutToken__factory extends ContractFactory {
  constructor(...args: NutTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NutToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<NutToken>;
  }
  getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  attach(address: string): NutToken {
    return super.attach(address) as NutToken;
  }
  connect(signer: Signer): NutToken__factory {
    return super.connect(signer) as NutToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NutTokenInterface {
    return new utils.Interface(_abi) as NutTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NutToken {
    return new Contract(address, _abi, signerOrProvider) as NutToken;
  }
}
